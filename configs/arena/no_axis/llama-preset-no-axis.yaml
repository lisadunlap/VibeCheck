# Path to CSV file containing model outputs. Must include columns for model responses 
# and a 'preference' column indicating which model output was preferred.
data_path: "data/llama3-70b-arena/llama_vs_not_llama_with_categories.csv"  # Required argument
num_samples: null 

wandb: true # If true, logs results to Weights & Biases.

output_dir: "./vibecheck_results" # Directory to save results.
name: "llama3-70b-arena-no-axis-preset" # Name of the experiment, used for saving the pkl file.

models: ["not_llama", "llama-3-70b-instruct"]  # List of two model names to compare. These should match the column names in the CSV.

# Name of the Weights & Biases project where results will be logged.
project_name: "vibecheck"

# If true, only runs the vibe proposal step without conducting further analysis.
proposer_only: false

# llm to use for preference judgment (only used if preference column does not exist)
preference_judge_llm: "gpt-4o"

# If true, uses all data for training without creating a separate test set.
# This can be useful for small datasets but may not give reliable accuracy estimates.
no_holdout_set: true

gradio: false # launch a Gradio interface after analysis for interactive exploration of the results.

# turn into single propertes instead of axes
initial_vibes: [
  "Assertiveness: Uses definitive, confidence statements.",
  "Double Check: Double checks the information and makes sure it is correct.",
  "Detail and Elaboration: Provides thorough, nuanced, and expansive information.",
  "Formalness: Uses formal and sophisticated vocabulary and sentence structure.",
  "Friendly: Uses friendly and warm language.",
  "Emotional Tone: Infuses responses with expressive emotion, making the tone enthusiastic or empathetic.",
  "Creativity and Originality: Provides responses with novel ideas or imaginative scenarios.",
  "Explicitness: States things directly and unambiguously.",
  "Humor and Playfulness: Uses humor, playful language, or wordplay to make the response engaging.",
  "Engagement: Actively engages the reader using rhetorical questions or interactive phrasing.",
  "Conciseness: Uses minimal words to convey a point clearly.",
  "Persuasiveness: Constructs arguments that are compelling and convincing.",
  "Bias and Subjectivity: Expresses opinions, takes sides, or incorporates bias.",
  "Clarity and Readability: Uses simple, clear, and easily understandable language.",
  "Safety and Sensitivity: Emphasizes respectful and appropriate language and safety.",
  "Interactivity: Encourages user participation (e.g., prompts for feedback).",
  "Novelty: Offers unconventional, unexpected perspectives.",
  "Personalization: Appears tailored to the specific input, using relevant details.",
  "Visual Structure: Uses formatting elements like bullet points, headings, and paragraphing for visual organization.",
  "Technical Precision: Uses domain-specific terminology accurately.",
  "Citation Style: Explicitly references sources or authorities.",
  "Temporal Focus: Emphasizes future implications or forward-looking statements.",
  "Metaphorical Language: Uses analogies, metaphors, and figurative language.",
  "First-Person Voice: Uses 'I' statements and personal perspective.",
  "Third-Person Voice: Uses third-person or impersonal perspective.",
  "Numerical Precision: Provides specific numbers, statistics, or quantitative data.",
  "Formatting: Uses formatting elements like bullet points, headings, and paragraphing for visual organization.",
  "Latex and Math: Uses Latex and math formatting.",
  "Hedging: Qualifies statements with caveats and limitations.",
  "Instructional Tone: Provides guidance, steps, or actionable advice.",
  "Cultural Specificity: References specific cultural contexts or knowledge.",
  "Use of Examples: Uses examples to illustrate points.",
  "Use of Statistics: Uses statistics to support points.",
  "Use of Quotes: Uses quotes to support points.",
  "Use of Anecdotes: Uses anecdotes to support points.",
  "Use of Data: Uses data to support points.",
  "Use of Research: Uses research to support points.",
  "Offers a Conclusion: Offers a conclusion to the response.",
  "Offers a Call to Action: Offers a call to action to the reader.",
  "Offers a Recommendation: Offers a recommendation to the reader.",
  "Offers a Warning: Offers a warning to the reader.",
  "Offers a Promise: Offers a promise to the reader.",
  "Offers a Challenge: Offers a challenge to the reader.",
  "Offers a Question: Offers a question to the reader.",
  "Gives Personal Opinion: Gives a personal opinion on the topic.",
  "Sarcastic Tone: Uses a sarcastic or snarky tone.",
  "Insulting Tone: Uses insulting or derogatory language.",
]

iterations: 0 # Number of iterations to run the analysis. 

proposer:
  # Number of samples to use when proposing vibes. Higher numbers will give more comprehensive but slower results.
  num_samples: 30
  model: "gpt-4o"
  shuffle_positions: false # If true, shuffles the positions of the models in the prompt for finding vibes. This is best when you are using the axis proposal method.
  batch_size: 5 # Number of samples to use for each batch (LLM call) in the vibe proposal.
  embedding_model: "text-embedding-3-small" # Model to use for embedding analysis.
  prompt: proposer_freeform # Type of prompt to use for vibe proposal. Found in components/prompts/proposer_prompts.py
  iteration_prompt: proposer_freeform_iteration # Type of prompt to use for vibe proposal. Found in components/prompts/proposer_prompts.py
  reduction_prompt: reduce_freeform # Type of prompt to use for axis reduction. Found in components/prompts/reduction_prompts.py

# Maximum number of vibes to use per iteration. This limits the number of 
# behavioral dimensions that will be analyzed.
num_vibes: 10
num_final_vibes: false

# If true, runs analysis on a small subset of data for testing purposes.
test: false

ranker: 
  single_position_rank: false # If true, only ranks model outputs in one position order. This is faster but may introduce position bias in the analysis.
  model: "gpt-4o-mini"
  solver: "elasticnet" # Solver to use for regression analysis (choices: standard, lasso, elasticnet)
  # num_final_vibes: null # Maximum number of vibes to use in final analysis. This limits the number of behavioral dimensions that will be analyzed.
  embedding_model: "text-embedding-3-small" # Model to use for embedding analysis.
  embedding_rank: false # If true, ranks model outputs using embedding similarity. This is much cheaper than the LLM ranker, but way less accurate.
  vibe_batch_size: 5 # batch ranker
  prompt: ranker_prompt_multi # Type of prompt to use for ranker. Found in components/prompts/ranker_prompts.py

filter:
  min_score_diff: 0.0 # Minimum score difference to consider a vibe.
  min_pref_score_diff: 0.0 # Minimum preference score difference to consider a vibe.

# uncomment to use the paper definition of vibes
# proposer:
#   prompt: proposer_freeform_axis
#   iteration_prompt: proposer_freeform_iteration_axis
#   reduction_prompt: reduce_freeform_axis

# ranker:
#   prompt: ranker_freeform_axis